@InCollection{miller:2011:chapter2,
  author =	"Julian F. Miller",
  title =	"Cartesian Genetic Programming",
  booktitle =	"Cartesian Genetic Programming",
  publisher =	"Springer",
  year = 	"2011",
  series =	"Natural Computing Series",
  chapter =	"2",
  pages =	"17--34",
  keywords =	"genetic algorithms, genetic programming, Cartesian
		 Genetic Programming, (CGP)",
  isbn13 =	"978-3-642-17309-7",
  URL =  	"http://www.springer.com/computer/theoretical+computer+science/book/978-3-642-17309-7",
  doi =  	"doi:10.1007/978-3-642-17310-3_2",
  abstract =	"In this chapter, we describe the original and most
		 widely known form of Cartesian genetic programming
		 (CGP). CGP encodes computational structures, which we
		 call programs in the form of directed acyclic graphs.
		 We refer to this as classic CGP. However these program
		 may be computer programs, circuits, rules, or other
		 specialised computational entities.",
  notes =	"part of \cite{Miller:CGP}",
  doi-url =	"http://dx.doi.org/10.1007/978-3-642-17310-3_2",
}


@InProceedings{christensen:2002:comp_effort,
  title =	"An Analysis of {Koza}'s Computational Effort Statistic
		 for Genetic Programming",
  author =	"Steffen Christensen and Franz Oppacher",
  booktitle =	"Genetic Programming, Proceedings of the 5th European
		 Conference, EuroGP 2002",
  volume =	"2278",
  series =	"LNCS",
  pages =	"182--191",
  publisher =	"Springer-Verlag",
  address =	"Kinsale, Ireland",
  publisher_address = "Berlin",
  month =	"3-5 " # apr,
  year = 	"2002",
  keywords =	"genetic algorithms, genetic programming",
  ISBN = 	"3-540-43378-3",
  URL =  	"http://link.springer-ny.com/link/service/series/0558/bibs/2278/22780182.htm",
  URL =  	"http://link.springer-ny.com/link/service/series/0558/papers/2278/22780182.pdf",
  abstract =	"As research into the theory of genetic programming
		 progresses, more effort is being placed on
		 systematically comparing results to give an indication
		 of the effectiveness of sundry modifications to
		 traditional GP. The statistic that is commonly used to
		 report the amount of computational effort to solve a
		 particular problem with 99% probability is Koza's I(M,
		 i, z) statistic. This paper analyzes this measure from
		 a statistical perspective. In particular, Koza's I
		 tends to underestimate the true computational effort,
		 by 25% or more for commonly used GP parameters and run
		 sizes. The magnitude of this underestimate is
		 nonlinearly decreasing with increasing run count,
		 leading to the possibility that published results based
		 on few runs may in fact be unmatchable when replicated
		 at higher resolution. Additional analysis shows that
		 this statistic also under reports the generation at
		 which optimal results are achieved.",
  notes =	"EuroGP'2002, part of \cite{lutton:2002:GP}",
}

@InProceedings{clegg:2007:crossover,
  author =	"Janet Clegg and James Alfred Walker and Julian Francis
		 Miller",
  title =	"A new crossover technique for Cartesian genetic
		 programming",
  booktitle =	"GECCO '07: Proceedings of the 9th annual conference on
		 Genetic and evolutionary computation",
  year = 	"2007",
  volume =	"2",
  isbn13 =	"978-1-59593-697-4",
  pages =	"1580--1587",
  address =	"London",
  URL =  	"http://www.cs.bham.ac.uk/~wbl/biblio/gecco2007/docs/p1580.pdf",
  doi =  	"doi:10.1145/1276958.1277276",
  publisher =	"ACM Press",
  publisher_address = "New York, NY, USA",
  month =	"7-11 " # jul,
  organisation = "ACM SIGEVO (formerly ISGEC)",
  keywords =	"genetic algorithms, genetic programming, Cartesian
		 Genetic Programming, crossover techniques,
		 optimisation",
  abstract =	"Genetic Programming was first introduced by Koza using
		 tree representation together with a crossover technique
		 in which random sub-branches of the parents' trees are
		 swapped to create the offspring. Later Miller and
		 Thomson introduced Cartesian Genetic Programming, which
		 uses directed graphs as a representation to replace the
		 tree structures originally introduced by Koza.
		 Cartesian Genetic Programming has been shown to perform
		 better than the traditional Genetic Programming; but it
		 does not use crossover to create offspring, it is
		 implemented using mutation only. In this paper a new
		 crossover method in Genetic Programming is introduced.
		 The new technique is based on an adaptation of the
		 Cartesian Genetic Programming representation and is
		 tested on two simple regression problems. It is shown
		 that by implementing the new crossover technique,
		 convergence is faster than that of using mutation only
		 in the Cartesian Genetic Programming method.",
  notes =	"GECCO-2007 A joint meeting of the sixteenth
		 international conference on genetic algorithms
		 (ICGA-2007) and the twelfth annual genetic programming
		 conference (GP-2007). ACM Order Number 910071",
  doi-url =	"http://dx.doi.org/10.1145/1276958.1277276",
}

@InProceedings{yu:2001:neutrality,
  author =	"Tina Yu and Julian Miller",
  title =	"Neutrality and the Evolvability of {Boolean} Function
		 Landscape",
  booktitle =	"Genetic Programming, Proceedings of EuroGP'2001",
  year = 	"2001",
  volume =	"2038",
  series =	"LNCS",
  pages =	"204--217",
  address =	"Lake Como, Italy",
  publisher_address = "Berlin",
  month =	"18-20 " # apr,
  organisation = "EvoNET",
  publisher =	"Springer-Verlag",
  keywords =	"genetic algorithms, genetic programming, Neutrality,
		 Evolvability, Boolean function landscape, Neutral
		 mutation, Exploration vs. Exploitation, Graph-based
		 Genetic Programming",
  ISBN = 	"3-540-41899-7",
  URL =  	"http://www.cs.mun.ca/~tinayu/index_files/addr/public_html/neutrality.pdf",
  URL =  	"http://www.springerlink.com/openurl.asp?genre=article&issn=0302-9743&volume=2038&spage=204",
  size = 	"14 pages",
  abstract =	"This work is a study of neutrality in the context of
		 Evolutionary Computation systems. In particular, we
		 introduce the use of explicit neutrality with an
		 integer string coding scheme to allow neutrality to be
		 measured during evolution. We tested this method on a
		 Boolean benchmark problem. The experimental results
		 indicate that there is a positive relationship between
		 neutrality and evolvability: neutrality improves
		 evolvability. We also identify four characteristics of
		 adaptive/neutral mutations that are associated with
		 high evolvability. They may be the ingredients in
		 designing effective Evolutionary Computation systems
		 for the Boolean class problem.",
  notes =	"EuroGP'2001, part of \cite{miller:2001:gp}",
}

@InProceedings{vasicek:2012:efficient,
  author =	"Zdenek Vasicek and Karel Slany",
  title =	"Efficient Phenotype Evaluation in Cartesian Genetic
		 Programming",
  booktitle =	"Proceedings of the 15th European Conference on Genetic
		 Programming, EuroGP 2012",
  year = 	"2012",
  month =	"11-13 " # apr,
  series =	"LNCS",
  volume =	"7244",
  publisher =	"Springer Verlag",
  address =	"Malaga, Spain",
  pages =	"266--278",
  organisation = "EvoStar",
  isbn13 =	"978-3-642-29138-8",
  doi =  	"doi:10.1007/978-3-642-29139-5_23",
  keywords =	"genetic algorithms, genetic programming, cartesian
		 genetic programming, Fitness evaluation, Acceleration,
		 Symbolic regression",
  abstract =	"This paper describes an efficient acceleration
		 technique designed to speedup the evaluation of
		 candidate solutions in Cartesian Genetic Programming
		 (CGP). The method is based on translation of the CGP
		 phenotype to a binary machine code that is consequently
		 executed. The key feature of the presented approach is
		 that the introduction of the translation mechanism into
		 common fitness evaluation procedure requires only
		 marginal knowledge of target CPU instruction set. The
		 proposed acceleration technique is evaluated using a
		 symbolic regression problem in floating point domain.
		 It is shown that for a cost of small changes in a
		 common CGP implementation, a significant speedup can be
		 obtained even on a common desktop CPU. The accelerated
		 version of CGP implementation accompanied with
		 performance analysis is available for free download
		 from http://www.fit.vutbr.cz/~vasicek/cgp",
  notes =	"Part of \cite{Moraglio:2012:GP} EuroGP'2012 held in
		 conjunction with EvoCOP2012 EvoBIO2012, EvoMusArt2012
		 and EvoApplications2012",
  doi-url =	"http://dx.doi.org/10.1007/978-3-642-29139-5_23",
}

@Article{miller:2006:redundancy,
  title =	"Redundancy and Computational Efficiency in Cartesian
		 Genetic Programming",
  author =	"Julian F. Miller and Stephen L. Smith",
  journal =	"IEEE Transactions on Evolutionary Computation",
  year = 	"2006",
  volume =	"10",
  number =	"2",
  pages =	"167--174",
  month =	apr,
  keywords =	"genetic algorithms, genetic programming, Cartesian
		 genetic programming (CGP), code bloat, graph-based
		 representations, introns",
  doi =  	"doi:10.1109/TEVC.2006.871253",
  size = 	"8 pages",
  abstract =	"The graph-based Cartesian genetic programming system
		 has an unusual genotype representation with a number of
		 advantageous properties. It has a form of redundancy
		 whose role has received little attention in the
		 published literature. The representation has genes that
		 can be activated or deactivated by mutation operators
		 during evolution. It has been demonstrated that this
		 junk has a useful role and is very beneficial in
		 evolutionary search. The results presented demonstrate
		 the role of mutation and genotype length in the
		 evolvability of the representation. It is found that
		 the most evolvable representations occur when the
		 genotype is extremely large and in which over 95
		 percent of the genes are inactive.",
  doi-url =	"http://dx.doi.org/10.1109/TEVC.2006.871253",
}

@InProceedings{sikulova:2012:coevolution,
  author =	"Michaela Sikulova and Lukas Sekanina",
  title =	"Coevolution in Cartesian Genetic Programming",
  booktitle =	"Proceedings of the 15th European Conference on Genetic
		 Programming, EuroGP 2012",
  year = 	"2012",
  month =	"11-13 " # apr,
  series =	"LNCS",
  volume =	"7244",
  publisher =	"Springer Verlag",
  address =	"Malaga, Spain",
  pages =	"182--193",
  organisation = "EvoStar",
  isbn13 =	"978-3-642-29138-8",
  doi =  	"doi:10.1007/978-3-642-29139-5_16",
  size = 	"12 pages",
  keywords =	"genetic algorithms, genetic programming, cartesian
		 genetic programming, Coevolution, Symbolic regression",
  abstract =	"Cartesian genetic programming (CGP) is a branch of
		 genetic programming which has been used in various
		 applications. This paper proposes to introduce
		 coevolution to CGP in order to accelerate the task of
		 symbolic regression. In particular, fitness predictors
		 which are small subsets of the training set are
		 coevolved with CGP programs. It is shown using five
		 symbolic regression problems that the (median)
		 execution time can be reduced 2--5 times in comparison
		 with the standard CGP.",
  notes =	"1+lambda hill climber with point mutation on CGP
		 representation with restart. 1pt crossover? Part of
		 \cite{Moraglio:2012:GP} EuroGP'2012 held in conjunction
		 with EvoCOP2012 EvoBIO2012, EvoMusArt2012 and
		 EvoApplications2012",
  doi-url =	"http://dx.doi.org/10.1007/978-3-642-29139-5_16",
}

@InProceedings{mcdermott:2012:benchmarks,
  author =	"James McDermott and David R. White and Sean Luke and
		 Luca Manzoni and Mauro Castelli and Leonardo Vanneschi
		 and Wojciech Jaskowski and Krzysztof Krawiec and Robin
		 Harper and Kenneth {De Jong} and Una-May O'Reilly",
  title =	"Genetic programming needs better benchmarks",
  booktitle =	"GECCO '12: Proceedings of the fourteenth international
		 conference on Genetic and Evolutionary computation
		 conference",
  year = 	"2012",
  isbn13 =	"978-1-4503-1177-9",
  pages =	"791--798",
  keywords =	"genetic algorithms, genetic programming",
  month =	"7-11 " # jul,
  organisation = "SIGEVO",
  address =	"Philadelphia, Pennsylvania, USA",
  doi =  	"doi:10.1145/2330163.2330273",
  publisher =	"ACM",
  publisher_address = "New York, NY, USA",
  abstract =	"Genetic programming (GP) is not a field noted for the
		 rigor of its benchmarking. Some of its benchmark
		 problems are popular purely through historical
		 contingency, and they can be criticized as too easy or
		 as providing misleading information concerning
		 real-world performance, but they persist largely
		 because of inertia and the lack of good alternatives.
		 Even where the problems themselves are impeccable,
		 comparisons between studies are made more difficult by
		 the lack of standardization. We argue that the
		 definition of standard benchmarks is an essential step
		 in the maturation of the field. We make several
		 contributions towards this goal. We motivate the
		 development of a benchmark suite and define its goals;
		 we survey existing practice; we enumerate many
		 candidate benchmarks; we report progress on reference
		 implementations; and we set out a concrete plan for
		 gathering feedback from the GP community that would, if
		 adopted, lead to a standard set of benchmarks.",
  notes =	"Also known as \cite{2330273} GECCO-2012 A joint
		 meeting of the twenty first international conference on
		 genetic algorithms (ICGA-2012) and the seventeenth
		 annual genetic programming conference (GP-2012)",
  doi-url =	"http://dx.doi.org/10.1145/2330163.2330273",
}

@InProceedings{johnson:2000:guide,
  author =	"David S. Johnson",
  title =	"A Theoretician's Guide to the Experimental Analysis of
		 Algorithms",
  booktitle =	"Dagstuhl Seminar on Experimental Algorithmics",
  year = 	"2000",
  month =	sep,
  note = 	"An earlier version of \cite{johnson02}",
  annote =	"Gives much useful advice on producing empirical
		 papers, most of it applicable beyond algorithm work,
		 including lists of pitfalls, suggestions, and pet
		 peeves. One important principle discussed is
		 comparability (as differentiated from
		 reproducability).",
}

@InProceedings{imamura:2000:testvector,
  author =	"Kosuke Imamura and James A. Foster and Axel W.
		 Krings",
  title =	"The Test Vector Problem and Limitations to Evolving
		 Digital Circuits",
  booktitle =	"The Second NASA/DoD workshop on Evolvable Hardware",
  year = 	"2000",
  pages =	"75--80",
  address =	"Palo Alto, California",
  publisher_address = "1730 Massachusetts Avenue, N.W., Washington, DC,
		 20036-1992, USA",
  month =	"13-15 " # jul,
  organisation = "Jet Propulsion Laboratory, California Institute of
		 Technology",
  publisher =	"IEEE Computer Society",
  keywords =	"genetic algorithms, logic design, logic testing, VLSI,
		 evolutionary techniques, evolving digital circuits,
		 test vector generation problem, test vector problem,
		 truth table",
  ISBN = 	"0-7695-0762-X",
  abstract =	"Evolvable Hardware (EHW) has been proposed as a new
		 technique to design complex systems. Often, complex
		 systems turn out to be very difficult to evolve. The
		 problem is that a general strategy is too difficult for
		 the evolution process to discover directly. This paper
		 proposes a new approach that performs incremental
		 evolution in two directions: from complex system to
		 sub-systems and from subsystems back to complex system.
		 In this approach, incremental evolution gradually
		 decomposes a complex problem into some sub-tasks. In a
		 second step, we gradually make the tasks more
		 challenging and general. Our approach automatically
		 discovers the sub-tasks, their sequence as well as
		 circuit layout dimensions. Our method is tested in a
		 digital circuit domain and compared to direct
		 evolution. We show that our bidirectional incremental
		 approach can handle more complex, harder tasks and
		 evolve them more effectively, then direct evolution.",
  notes =	"EH2000 http://ic.arc.nasa.gov/projects/eh2000/",
}

@InProceedings{seaton:2012:locality,
  author =	"Tom Seaton and Julian F. Miller and Tim Clarke",
  title =	"An Ecological Approach to Measuring Locality in Linear
		 Genotype to Phenotype Maps",
  booktitle =	"Proceedings of the 15th European Conference on Genetic
		 Programming, EuroGP 2012",
  year = 	"2012",
  month =	"11-13 " # apr,
  series =	"LNCS",
  volume =	"7244",
  publisher =	"Springer Verlag",
  address =	"Malaga, Spain",
  pages =	"170--181",
  organisation = "EvoStar",
  isbn13 =	"978-3-642-29138-8",
  doi =  	"doi:10.1007/978-3-642-29139-5_15",
  keywords =	"genetic algorithms, genetic programming, cartesian
		 genetic programming, Locality",
  abstract =	"Recent research has considered the role of locality in
		 GP representations. We use a modified statistical
		 technique drawn from numerical ecology, the Mantel
		 test, to measure the locality of integer-encoded GP.
		 Weak locality is identified in a case study on
		 Cartesian Genetic Programming (CGP), a directed acyclic
		 graph representation. A method of varying syntactic
		 program locality continuously through the application
		 of a biased mutation operator is demonstrated. The
		 impact of varying locality under the new measure is
		 assessed over a randomly generated set of polynomial
		 symbolic regression problems. We observe that enforcing
		 higher levels of locality in CGP is associated with
		 poorer performance on the problem set and discuss
		 implications in the context of existing models of GP
		 genotype-phenotype maps.",
  notes =	"Part of \cite{Moraglio:2012:GP} EuroGP'2012 held in
		 conjunction with EvoCOP2012 EvoBIO2012, EvoMusArt2012
		 and EvoApplications2012",
  doi-url =	"http://dx.doi.org/10.1007/978-3-642-29139-5_15",
}

@Article{collins:2006:haystacks,
  author =	"Mark Collins",
  title =	"Finding needles in haystacks is harder with
		 neutrality",
  journal =	"Genetic Programming and Evolvable Machines",
  year = 	"2006",
  volume =	"7",
  number =	"2",
  pages =	"131--144",
  month =	aug,
  note = 	"Special Issue: Best of GECCO 2005",
  keywords =	"genetic algorithms, genetic programming, Cartesian
		 genetic programming, random sampling, solution
		 density",
  ISSN = 	"1389-2576",
  doi =  	"doi:10.1007/s10710-006-9001-y",
  abstract =	"an extended analysis of the reported successes of the
		 Cartesian Genetic Programming method on a simplified
		 form of the Boolean parity problem. We show the method
		 of sampling used by the CGP is significantly less
		 effective at locating solutions than the solution
		 density of the corresponding formula space would
		 warrant. We present results indicating that the loss of
		 performance is caused by the sampling bias of the CGP,
		 due to the neutrality friendly representation. We
		 implement a simple intron free random sampling
		 algorithm which performs considerably better on the
		 same problem and then explain how such performance is
		 possible.",
  notes =	"Reduced parity=given XOR and EQ only.",
  doi-url =	"http://dx.doi.org/10.1007/s10710-006-9001-y",
}

@InProceedings{harding:2012:mtcgp,
  author =	"Simon Harding and Vincent Graziano and Juergen Leitner
		 and Juergen Schmidhuber",
  title =	"{MT}-{CGP}: mixed type cartesian genetic programming",
  booktitle =	"GECCO '12: Proceedings of the fourteenth international
		 conference on Genetic and evolutionary computation
		 conference",
  year = 	"2012",
  isbn13 =	"978-1-4503-1177-9",
  pages =	"751--758",
  keywords =	"genetic algorithms, genetic programming, cartesian
		 genetic programming",
  month =	"7-11 " # jul,
  organisation = "SIGEVO",
  address =	"Philadelphia, Pennsylvania, USA",
  doi =  	"doi:10.1145/2330163.2330268",
  publisher =	"ACM",
  publisher_address = "New York, NY, USA",
  abstract =	"The majority of genetic programming implementations
		 build expressions that only use a single data type.
		 This is in contrast to human engineered programs that
		 typically make use of multiple data types, as this
		 provides the ability to express solutions in a more
		 natural fashion. In this paper, we present a version of
		 Cartesian Genetic Programming that handles multiple
		 data types. We demonstrate that this allows evolution
		 to quickly find competitive, compact, and human
		 readable solutions on multiple classification tasks.",
  notes =	"Also known as \cite{2330268} GECCO-2012 A joint
		 meeting of the twenty first international conference on
		 genetic algorithms (ICGA-2012) and the seventeenth
		 annual genetic programming conference (GP-2012)",
  doi-url =	"http://dx.doi.org/10.1145/2330163.2330268",
}

@InProceedings{harding:2009:smcgp,
  author =	"Simon Harding and Julian Miller and Wolfgang Banzhaf",
  title =	"Self Modifying Cartesian Genetic Programming:
		 Fibonacci, Squares, Regression and Summing",
  booktitle =	"Proceedings of the 12th European Conference on Genetic
		 Programming, EuroGP 2009",
  year = 	"2009",
  volume =	"5481",
  series =	"LNCS",
  pages =	"133--144",
  address =	"Tuebingen",
  month =	apr # " 15-17",
  organisation = "EvoStar",
  publisher =	"Springer",
  keywords =	"genetic algorithms, genetic programming, cartesian
		 genetic programming, developmental systems",
  isbn13 =	"978-3-642-01180-1",
  URL =  	"http://www.evolutioninmaterio.com/preprints/eurogp_smcgp_1.ps.pdf",
  doi =  	"doi:10.1007/978-3-642-01181-8_12",
  size = 	"12 pages",
  abstract =	"Self Modifying CGP (SMCGP) is a developmental form of
		 Cartesian Genetic Programming(CGP). It is able to
		 modify its own phenotype during execution of the
		 evolved program. This is done by the inclusion of
		 modification operators in the function set. Here we
		 present the use of the technique on several different
		 sequence generation and regression problems.",
  notes =	"Part of \cite{conf/eurogp/2009} EuroGP'2009 held in
		 conjunction with EvoCOP2009, EvoBIO2009 and
		 EvoWorkshops2009",
  doi-url =	"http://dx.doi.org/10.1007/978-3-642-01181-8_12",
}

@Article{walker:2008:cgpmodules,
  author =	"James Alfred Walker and Julian Francis Miller",
  title =	"The Automatic Acquisition, Evolution and Reuse of
		 Modules in Cartesian Genetic Programming",
  journal =	"IEEE Transactions on Evolutionary Computation",
  year = 	"2008",
  volume =	"12",
  number =	"4",
  pages =	"397--417",
  month =	aug,
  keywords =	"genetic algorithms, genetic programming, Automatically
		 defined functions (ADFs), Cartesian genetic programming
		 (CGP), embedded Cartesian genetic programming (ECGP),
		 genetic programming (GP), graph-based representations,
		 modularity, module acquisition, ECGP",
  ISSN = 	"1089-778X",
  doi =  	"doi:10.1109/TEVC.2007.903549",
  size = 	"21 pages",
  abstract =	"This paper presents a generalisation of the
		 graph-based genetic programming (GP) technique known as
		 Cartesian genetic programming (CGP). We have extended
		 CGP by using automatic module acquisition, evolution,
		 and reuse. To benchmark the new technique, we have
		 tested it on: various digital circuit problems, two
		 symbolic regression problems, the lawnmower problem,
		 and the hierarchical if-and-only-if problem. The
		 results show the new modular method evolves solutions
		 quicker than the original nonmodular method, and the
		 speedup is more pronounced on larger problems. Also,
		 the new modular method performs favourably when
		 compared with other GP methods. Analysis of the evolved
		 modules shows they often produce recognisable
		 functions. Prospects for further improvements to the
		 method are discussed.",
  notes =	"8-even parity, 3-bit adder, 3-multiplier,
		 3-comparison, HIFF, ADF. Refers to PDGP, pushGP, ADM.
		 pop=5 (1+4)-ES, 1000 generations. suggestion (p401)
		 that ECGP may suffer bloat, stack overflow and out of
		 memory errors. Combined with duplicate entry
		 \cite{DBLP:journals/tec/WalkerM08} October 2010. INSPEC
		 Accession Number: 10118371",
  doi-url =	"http://dx.doi.org/10.1109/TEVC.2007.903549",
}

@InProceedings{howard:2012:memristive,
  author =	"Gerard David Howard and Larry Bull and Andrew
		 Adamatzky",
  title =	"Cartesian Genetic Programming for Memristive Logic
		 Circuits",
  booktitle =	"Proceedings of the 15th European Conference on Genetic
		 Programming, EuroGP 2012",
  year = 	"2012",
  month =	"11-13 " # apr,
  series =	"LNCS",
  volume =	"7244",
  publisher =	"Springer Verlag",
  address =	"Malaga, Spain",
  pages =	"37--48",
  organisation = "EvoStar",
  isbn13 =	"978-3-642-29138-8",
  doi =  	"doi:10.1007/978-3-642-29139-5_4",
  keywords =	"genetic algorithms, genetic programming, cartesian
		 genetic programming, Self-adaptation, Nanotechnology,
		 Boolean logic, Memristors, Robotics",
  abstract =	"In this paper memristive logic circuits are evolved
		 using Cartesian Genetic Programming. Graphs comprised
		 of implication logic (IMP) nodes are compared to more
		 ubiquitous NAND circuitry on a number of logic circuit
		 problems and a robotic control task. Self-adaptive
		 search parameters are used to provide each graph with
		 autonomy with respect to its relative mutation rates.
		 Results demonstrate that, although NAND-logic graphs
		 are easier to evolve, IMP graphs carry benefits in
		 terms of (i) numbers of memristors required (ii) the
		 time required to process the graphs.",
  notes =	"Part of \cite{Moraglio:2012:GP} EuroGP'2012 held in
		 conjunction with EvoCOP2012 EvoBIO2012, EvoMusArt2012
		 and EvoApplications2012",
  doi-url =	"http://dx.doi.org/10.1007/978-3-642-29139-5_4",
}

@InProceedings{miller:2001:bloat,
  author =	"Julian Miller",
  title =	"What Bloat? Cartesian Genetic Programming on {Boolean}
		 Problems",
  booktitle =	"2001 Genetic and Evolutionary Computation Conference
		 Late Breaking Papers",
  year = 	"2001",
  pages =	"295--302",
  address =	"San Francisco, California, USA",
  month =	"9-11 " # jul,
  keywords =	"genetic algorithms, genetic programming, cartesian
		 genetic programming, bloat, graph-based genetic
		 programming, genotype-phenotype",
  URL =  	"http://www.elec.york.ac.uk/intsys/users/jfm7/gecco2001Late.pdf",
  abstract =	"Abstract This paper presents an empirical study of the
		 variation of program size over time, for a form of
		 Genetic Programming called Cartesian Genetic
		 Programming. Two main types of Cartesian genetic
		 programming are examined: one uses a fully connected
		 graph, with no redundant nodes, while the other allows
		 partial connectedness and has redundant nodes. Studies
		 are reported here for fitness based search and for a
		 flat fitness landscape. The variation of program size
		 with generation does not behave in a similar way to
		 that reported in other studies on standard Genetic
		 Programming. Depending on the form of Cartesian genetic
		 programming, it is found that there is either very weak
		 program bloat or zero bloat. It is argued that an
		 important factor in the analysis of the change of
		 program length is neutral drift, and that if genotype
		 redundancy is present, the genetic neutral drift
		 simultaneously improves search and compresses program
		 code.",
  notes =	"GECCO-2001LB",
}

@InProceedings{payne:2009:bias,
  author =	"Andrew J. Payne and Susan Stepney",
  title =	"Representation and Structural Biases in {CGP}",
  booktitle =	"2009 IEEE Congress on Evolutionary Computation",
  year = 	"2009",
  pages =	"1064--1071",
  address =	"Trondheim, Norway",
  month =	"18-21 " # may,
  organization = "IEEE Computational Intelligence Society",
  publisher =	"IEEE Press",
  isbn13 =	"978-1-4244-2959-2",
  file = 	"P019.pdf",
  doi =  	"doi:10.1109/CEC.2009.4983064",
  abstract =	"An evolutionary algorithm automatically discovers
		 suitable solutions to a problem, which may lie anywhere
		 in a large search space of candidate solutions. In the
		 case of Genetic Programming, this means performing an
		 efficient search of all possible computer programs
		 represented as trees. Exploration of the search space
		 appears to be constrained by structural mechanisms that
		 exist in Genetic Programming as a consequence of using
		 trees to represent solutions. As a result, programs
		 with certain structures are more likely to be evolved,
		 and others extremely unlikely. We investigate whether
		 the graph representation used in Cartesian Genetic
		 Programming causes an analogous biasing effect,
		 imposing natural limitations on the class of solution
		 structures that are likely to be evolved.
		 Representation bias and structural bias are identified:
		 the rarer {"}regular{"} structures appear to be easier
		 to evolve than more common {"}irregular{"} ones.",
  keywords =	"genetic algorithms, genetic programming, cartesian
		 genetic programming",
  notes =	"CEC 2009 - A joint meeting of the IEEE, the EPS and
		 the IET. IEEE Catalog Number: CFP09ICE-CDR",
  doi-url =	"http://dx.doi.org/10.1109/CEC.2009.4983064",
}

@Article{niehaus:2007:ggp,
  author =	"Jens Niehaus and Christian Igel and Wolfgang Banzhaf",
  title =	"Reducing the Number of Fitness Evaluations in Graph
		 Genetic Programming Using a Canonical Graph Indexed
		 Database",
  journal =	"Evolutionary Computation",
  year = 	"2007",
  volume =	"15",
  number =	"2",
  pages =	"199--221",
  month =	"Summer",
  keywords =	"genetic algorithms, genetic programming",
  ISSN = 	"1063-6560",
  URL =  	"http://www.mitpressjournals.org/doi/pdfplus/10.1162/evco.2007.15.2.199",
  doi =  	"doi:10.1162/evco.2007.15.2.199",
  size = 	"23 pages",
  abstract =	"In this paper we describe the genetic programming
		 system GGP operating on graphs and introduce the notion
		 of graph isomorphisms to explain how they influence the
		 dynamics of GP. It is shown empirically how fitness
		 databases can improve the performance of GP and how
		 mapping graphs to a canonical form can increase these
		 improvements by saving considerable evaluation time.",
  doi-url =	"http://dx.doi.org/10.1162/evco.2007.15.2.199",
}

@InProceedings{daida3:2003:treebias,
  author =	"Jason M. Daida and Hsiaolei Li and Ricky Tang and Adam
		 M. Hilss",
  title =	"What Makes a Problem {GP}-Hard? Validating a
		 Hypothesis of Structural Causes",
  booktitle =	"Genetic and Evolutionary Computation -- GECCO-2003",
  year = 	"2003",
  pages =	"1665--1677",
  address =	"Chicago",
  publisher_address = "Berlin",
  month =	"12-16 " # jul,
  volume =	"2724",
  series =	"LNCS",
  ISBN = 	"3-540-40603-4",
  publisher =	"Springer-Verlag",
  keywords =	"genetic algorithms, genetic programming",
  abstract =	"empirical test of a hypothesis, which describes the
		 effects of structural mechanisms in genetic
		 programming. In doing so, the paper offers a test
		 problem anticipated by this hypothesis. The problem is
		 tunably difficult, but has this property because tuning
		 is accomplished through changes in structure. Content
		 is not involved in tuning. The results support a
		 prediction of the hypothesis - that GP search space is
		 significantly constrained as an outcome of structural
		 mechanisms.",
  notes =	"GECCO-2003. A joint meeting of the twelfth
		 International Conference on Genetic Algorithms
		 (ICGA-2003) and the eighth Annual Genetic Programming
		 Conference (GP-2003)",
}

@InProceedings{goldman:2013:cgpwaste,
  author =       "Brian W. Goldman and William F. Punch",
  title =        "Reducing Wasted Evaluations in Cartesian Genetic
                 Programming",
  booktitle =    "Proceedings of the 16th European Conference on Genetic
                 Programming, EuroGP 2013",
  year =         "2013",
  month =        "3-5 " # apr,
  series =       "LNCS",
  volume =       "7831",
  publisher =    "Springer Verlag",
  address =      "Vienna, Austria",
  pages =        "61--72",
  organisation = "EvoStar",
  keywords =     "genetic algorithms, genetic programming, Cartesian
                 Genetic Programming",
  abstract =     "Cartesian Genetic Programming~(CGP) is a form of
                 Genetic Programming~(GP) where a large proportion of
                 the genome is identifiably unused by the phenotype.
                 This can lead mutation to create offspring that are
                 genotypically different but phenotypically identical,
                 and therefore do not need to be evaluated. We
                 investigate theoretically and empirically the effects
                 of avoiding these otherwise wasted evaluations, and
                 provide evidence that doing so reduces the median
                 number of evaluations to solve four benchmark problems,
                 as well as reducing CGP's sensitivity to the mutation
                 rate. The similarity of results across the problem set
                 in combination with the theoretical conclusions
                 supports the general need for avoiding these
                 unnecessary evaluations.",
  notes =        "Part of \cite{Krawiec:2013:GP} EuroGP'2013 held in
                 conjunction with EvoCOP2013, EvoBIO2013, EvoMusArt2013
                 and EvoApplications2013",
}

@InProceedings{vassilev2000neutrality,
  author =	"Vesselin K. Vassilev and Julian F. Miller",
  title =	"The Advantages of Landscape Neutrality in Digital
		 Circuit Evolution",
  booktitle =	"Proceedings of the Third International Conference on
		 Evolvable Systems",
  year = 	"2000",
  ISBN = 	"3-540-67338-5",
  pages =	"252--263",
  publisher =	"Springer-Verlag",
}

@Article{luke:2006:bloat,
  author =	"Sean Luke and Liviu Panait",
  title =	"A Comparison of Bloat Control Methods for Genetic
		 Programming",
  journal =	"Evolutionary Computation",
  year = 	"2006",
  volume =	"14",
  number =	"3",
  pages =	"309--344",
  month =	"Fall",
  keywords =	"genetic algorithms, genetic programming",
  ISSN = 	"1063-6560",
  doi =  	"doi:10.1162/evco.2006.14.3.309",
  abstract =	"Genetic programming has highlighted the problem of
		 bloat, the uncontrolled growth of the average size of
		 an individual in the population. The most common
		 approach to dealing with bloat in tree-based genetic
		 programming individuals is to limit their maximal
		 allowed depth. An alternative to depth limiting is to
		 punish individuals in some way based on excess size,
		 and our experiments have shown that the combination of
		 depth limiting with such a punitive method is generally
		 more effective than either alone. Which such
		 combinations are most effective at reducing bloat? In
		 this article we augment depth limiting with nine bloat
		 control methods and compare them with one another.
		 These methods are chosen from past literature and from
		 techniques of our own devising. testing with four
		 genetic programming problems, we identify where each
		 bloat control method performs well on a per-problem
		 basis, and under what settings various methods are
		 effective independent of problem. We report on the
		 results of these tests, and discover an unexpected
		 winner in the cross-platform category.",
  doi-url =	"http://dx.doi.org/10.1162/evco.2006.14.3.309",
}
